<Page
  x:Class="PanoramioExplorer.Views.MapView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:controls="using:PanoramioExplorer.Controls"
  xmlns:converters="using:PanoramioExplorer.Converters"
  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
  xmlns:maps="using:Windows.UI.Xaml.Controls.Maps"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:viewModels="using:PanoramioExplorer.ViewModels"
  d:DataContext="{d:DesignInstance viewModels:MapViewModel}"
  mc:Ignorable="d">

  <Page.Resources>
    <converters:ItemClickedConverter x:Key="ItemClickedConverter" />

    <SolidColorBrush x:Key="SemiBlack" Color="#CC151313" />

    <DataTemplate x:Key="PhotoTemplate">
      <controls:PhotoImage
        Title="{Binding Title}"
        Width="150"
        Height="150"
        Background="White"
        Foreground="Black"
        ImageSource="{Binding Source}"
        ImageStretch="UniformToFill" />
    </DataTemplate>

    <Style x:Key="PhotoContainerStyle" TargetType="ListViewItem">
      <Setter Property="Padding" Value="0" />
      <Setter Property="Margin" Value="0,12" />
      <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="GalleryButtonStyle" TargetType="Button">
      <Setter Property="Foreground" Value="#7FCBCBCB" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="FontSize" Value="24" />
      <Setter Property="Margin" Value="12,24" />
      <Setter Property="Padding" Value="12" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Border
              x:Name="Root"
              Background="{TemplateBinding Background}"
              CornerRadius="12">
              <ContentPresenter
                x:Name="ContentPresenter"
                Padding="{TemplateBinding Padding}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                AutomationProperties.AccessibilityView="Raw"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                ContentTransitions="{TemplateBinding ContentTransitions}" />
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <PointerUpThemeAnimation Storyboard.TargetName="Root" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="PointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                      </ObjectAnimationUsingKeyFrames>
                      <PointerUpThemeAnimation Storyboard.TargetName="Root" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="White" />
                      </ObjectAnimationUsingKeyFrames>
                      <PointerDownThemeAnimation Storyboard.TargetName="Root" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseMediumLowBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="GalleryFontIcon" TargetType="SymbolIcon">
      <Setter Property="Width" Value="24" />
      <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="GalleryFontIconLabel" TargetType="TextBlock">
      <Setter Property="FontSize" Value="12" />
    </Style>

    <Style x:Key="HamburgerButtonStyle" TargetType="Button">
      <Setter Property="Width" Value="50" />
      <Setter Property="Height" Value="50" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Foreground" Value="White" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="BorderBrush" Value="Transparent" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="Button">
            <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
              <ContentPresenter
                x:Name="ContentPresenter"
                Padding="{TemplateBinding Padding}"
                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                AutomationProperties.AccessibilityView="Raw"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                ContentTransitions="{TemplateBinding ContentTransitions}" />
              <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                  <VisualState x:Name="Normal">
                    <Storyboard>
                      <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="PointerOver">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <SolidColorBrush Color="#FFE2E2E2" />
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Pressed">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0">
                          <DiscreteObjectKeyFrame.Value>
                            <SolidColorBrush Color="#FFDCDBDB" />
                          </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                      </ObjectAnimationUsingKeyFrames>
                      <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                    </Storyboard>
                  </VisualState>
                  <VisualState x:Name="Disabled">
                    <Storyboard>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Background">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseLowBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlDisabledTransparentBrush}" />
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualState>
                </VisualStateGroup>
              </VisualStateManager.VisualStateGroups>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </Page.Resources>

  <Grid>
    <interactivity:Interaction.Behaviors>
      <core:DataTriggerBehavior Binding="{Binding IsGalleryModeEnabled}" Value="True">
        <core:GoToStateAction StateName="ShowingPhoto" />
      </core:DataTriggerBehavior>
      <core:DataTriggerBehavior Binding="{Binding IsGalleryModeEnabled}" Value="False">
        <core:GoToStateAction StateName="NoPhotoShown" />
      </core:DataTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <SplitView
      x:Name="SplitView"
      CompactPaneLength="50"
      DisplayMode="CompactOverlay"
      IsPaneOpen="False"
      OpenPaneLength="200"
      PanePlacement="Left">
      <SplitView.Pane>
        <Grid Background="{StaticResource SemiBlack}">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
          </Grid.RowDefinitions>

          <TextBlock
            Margin="56,0,0,0"
            VerticalAlignment="Center"
            Foreground="White"
            FontWeight="SemiBold"
            Text="ФОТО В ОКРУГЕ" />

          <Button Style="{StaticResource HamburgerButtonStyle}" Tapped="MenuToggleButtonTapped">
            <SymbolIcon Style="{StaticResource GalleryFontIcon}" Symbol="Pictures" />
          </Button>

          <ListView
            Grid.Row="1"
            IsItemClickEnabled="True"
            ItemContainerStyle="{StaticResource PhotoContainerStyle}"
            ItemTemplate="{StaticResource PhotoTemplate}"
            ItemsSource="{Binding Photos}"
            SelectionMode="None">
            <interactivity:Interaction.Behaviors>
              <core:EventTriggerBehavior EventName="ItemClick">
                <core:InvokeCommandAction Command="{Binding ShowInGalleryModeCommand}" InputConverter="{StaticResource ItemClickedConverter}" />
              </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
          </ListView>
        </Grid>
      </SplitView.Pane>

      <SplitView.Content>
        <maps:MapControl
          x:Name="Map"
          BusinessLandmarksVisible="True"
          CenterChanged="OnMapCameraMoved"
          LandmarksVisible="True"
          PedestrianFeaturesVisible="True"
          RotateInteractionMode="Disabled"
          ZoomLevel="4" />
      </SplitView.Content>
    </SplitView>


    <Grid
      x:Name="Gallery"
      Padding="24"
      Background="Transparent"
      Opacity="0"
      IsHitTestVisible="False">

      <Grid.RowDefinitions>
        <RowDefinition />
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <controls:PhotoImage
        Title="{Binding GalleryPhoto.Title}"
        Background="Transparent"
        Foreground="White"
        ImageSource="{Binding GalleryPhoto.Source}"
        ImageStretch="Uniform" />

      <Grid Grid.Row="2" HorizontalAlignment="Center">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
          <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <Button
          Grid.Column="0"
          Style="{StaticResource GalleryButtonStyle}"
          Command="{Binding ShareCommand}"
          CommandParameter="{Binding GalleryPhoto}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <SymbolIcon Style="{StaticResource GalleryFontIcon}" Symbol="World" />
            <TextBlock
              Grid.Row="1"
              Style="{StaticResource GalleryFontIconLabel}"
              Text="поделиться" />
          </Grid>
        </Button>

        <Button
          Grid.Column="1"
          Style="{StaticResource GalleryButtonStyle}"
          Command="{Binding SaveCommand}"
          CommandParameter="{Binding GalleryPhoto}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <SymbolIcon Style="{StaticResource GalleryFontIcon}" Symbol="Download" />
            <TextBlock
              Grid.Row="1"
              Style="{StaticResource GalleryFontIconLabel}"
              Text="сохранить" />
          </Grid>
        </Button>

        <Button
          Grid.Column="2"
          Style="{StaticResource GalleryButtonStyle}"
          Command="{Binding ExitGalleryModeCommand}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <SymbolIcon Style="{StaticResource GalleryFontIcon}" Symbol="Cancel" />
            <TextBlock
              Grid.Row="1"
              Style="{StaticResource GalleryFontIconLabel}"
              Text="закрыть" />
          </Grid>
        </Button>
      </Grid>
    </Grid>

    <VisualStateManager.VisualStateGroups>
      <VisualStateGroup x:Name="GalleryModeStates">
        <VisualState x:Name="ShowingPhoto">
          <VisualState.Setters>
            <Setter Target="Gallery.(UIElement.IsHitTestVisible)" Value="True" />
          </VisualState.Setters>
          <Storyboard>
            <ColorAnimation
              Duration="0:0:0.3"
              Storyboard.TargetName="Gallery"
              Storyboard.TargetProperty="(UIElement.Background).(SolidColorBrush.Color)"
              To="Black">
              <ColorAnimation.EasingFunction>
                <CircleEase EasingMode="EaseOut" />
              </ColorAnimation.EasingFunction>
            </ColorAnimation>
            <DoubleAnimation
              Duration="0:0:0.3"
              Storyboard.TargetName="Gallery"
              Storyboard.TargetProperty="(UIElement.Opacity)"
              To="1">
              <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseOut" />
              </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
          </Storyboard>
        </VisualState>
        <VisualState x:Name="NoPhotoShown" />
      </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
  </Grid>
</Page>